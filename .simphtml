This is JUST an idea of what it would look like

To import a basic html template, we'd do:
mod import 'src/Templates' ~ renderTemp

mod import - how we would import modules
The module should be in single quotes.
The ~ means we are naming the imported module in this file as..(meaning when we put ~ renderTemp, that now means anything we want to access from the module will be accessed using renderTemp)

Here is an idea of strictly importing ideals from the module:

mod import 'src/Templates': [
	'render',
	'basicTemp',
	'renderHtml'
] ~ renderTemp

renderHtml just means we want to write some html, so we tell the compiler "Hey, be ready to compile some html"

The above basically just imports a few things strictly from the module, and then names the module import renderTemp

Now, we use renderTemp to render the basic html template:
renderTemp.render(renderTemp.basicTemp) ~ temp

We are naming the rendered template temp so it is easier to work with(~ temp)

Notice we import 2 things from the module, render and basicTemp. render would be used to render a template, basicTemp would be the basic html template the module offers.

Now, in order to write html, we would do as follows:

-> means we are appending ideals to the value, in this case the value is the rendered template

temp.renderHtml -> {
	Now, in order to write code in certain elements, we would just do as follows:
	[head]
		<title>Something</title>
	
	[body]
		<h1>Hello world</h1>
		<div id="yes"></div>
	
	Now, lets say that div was within the rendered template, we would then do:
	[div->id:yes]
		<h1>YES</h1>
  
  Remember, -> means we are appending ideals to a certain value..and anything within a rendered template is a value, therefore it can be accessed with ->
}